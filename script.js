const sheetId = '1-1CvXEzgeU6iO_NoQpL0lWmTI3DSEGaC2KOILsvetnU';
const apiKey = 'AIzaSyCPRT9U_a8PTWEzYqTc56ZadodxNaSYDds';
const range = 'Sheet1!A1:U1000';

function loadData() {
  const trackId = document.getElementById("trackId").value.trim();
  if (!trackId) {
    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£ ‡∏õ‡∏ä‡∏ä.");
    return;
  }

  const url = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?key=${apiKey}`;

  fetch(url)
    .then(response => response.json())
    .then(data => {
      if (!data.values) {
        document.getElementById("timeline").innerHTML = "<p class='text-danger text-center'>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets</p>";
        return;
      }

      const values = data.values;
      const filtered = values.filter(row => (row[1] || "").trim() === trackId);
      if (filtered.length === 0) {
        document.getElementById("timeline").innerHTML = "<p class='text-danger text-center'>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
        return;
      }

      drawTimeline(filtered);
    })
    .catch(error => {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
      document.getElementById("timeline").innerHTML = "<p class='text-danger text-center'>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
    });
}

function drawTimeline(data) {
  const container = document.getElementById("timeline");
  container.innerHTML = "";

  data.forEach(entry => {
    const dateIn = entry[7] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
    const dept = entry[3] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
    const docNoIn = entry[4] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
    const status = entry[5] || "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£";
    const dateOut = entry[10] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
    const docNoOut = entry[11] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
    const toDept = entry[12] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
    const result = entry[13] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
    const name = entry[2] || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠";

    const html = `
      <div class="card">
        <div class="card-body">
          <h5 class="card-title text-primary">üì• ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á: ${dateIn}</h5>
          <p class="card-text">‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô: ${dept}</p>
          <p class="card-text">‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤: ${docNoIn}</p>
          <p class="card-text">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${status}</p>
          <hr>
          <h5 class="card-title text-success">üì§ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å: ${dateOut}</h5>
          <p class="card-text">‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å: ${docNoOut}</p>
          <p class="card-text">‡∏™‡πà‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢: ${toDept}</p>
          <p class="card-text">‡∏ú‡∏•‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤: ${result}</p>
        </div>
      </div>
    `;

    container.innerHTML += html;

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)
    speakThai("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏∑‡∏≠ " + name);
  });
}

function speakThai(text) {
  const synth = window.speechSynthesis;
  const utterThis = new SpeechSynthesisUtterance(text);

  const voices = synth.getVoices();
  const thaiVoice = voices.find(voice => voice.lang.startsWith("th"));

  if (thaiVoice) {
    utterThis.voice = thaiVoice;
  }
  synth.speak(utterThis);
}

// ‡∏ö‡∏≤‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÇ‡∏´‡∏•‡∏î voice
window.speechSynthesis.onvoiceschanged = () => {};
